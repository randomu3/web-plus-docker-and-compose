version: '3'

services:
  backend:
    container_name: backend
    # build:
    #   context: backend
    #   dockerfile: Dockerfile.pub
    image: demiz/backend-release:1.0.3
    # image: backend-release:1.0.3
    env_file: .env
    volumes:
      - type: bind
        source: ./backend/src
        target: /app/src
      - /app/node_modules
    ports:
      - '4000:3000'
    restart: always
    networks:
      - backend

  frontend:
    container_name: frontend
    # build:
    #   context: frontend
    #   dockerfile: Dockerfile.pub
    image: demiz/frontend-release:1.0.3
    # image: frontend-release:1.0.3
    env_file: .env
    environment:
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - type: bind
        source: ./frontend/src
        target: /app/src
    ports:
      - '3001:3000'
    restart: always
    networks:
      - frontend

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    env_file: .env
    environment:
      POSTGRES_USER: student
      POSTGRES_PASSWORD: student
      POSTGRES_DB: nest_project
    restart: always
    volumes:
      - postgres_data:/data/postgres
    networks:
      - backend

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      - backend
      
volumes:
  postgres_data:
networks:
  backend:
  frontend: 